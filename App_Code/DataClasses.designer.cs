#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DSMS")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void Insertdrug(drug instance);
  partial void Updatedrug(drug instance);
  partial void Deletedrug(drug instance);
  partial void Insertdrugstore(drugstore instance);
  partial void Updatedrugstore(drugstore instance);
  partial void Deletedrugstore(drugstore instance);
  partial void Insertfactory(factory instance);
  partial void Updatefactory(factory instance);
  partial void Deletefactory(factory instance);
  partial void Insertmember(member instance);
  partial void Updatemember(member instance);
  partial void Deletemember(member instance);
  partial void InsertorderDetails(orderDetails instance);
  partial void UpdateorderDetails(orderDetails instance);
  partial void DeleteorderDetails(orderDetails instance);
  partial void Insertorderform(orderform instance);
  partial void Updateorderform(orderform instance);
  partial void Deleteorderform(orderform instance);
  partial void Insertwarehouse(warehouse instance);
  partial void Updatewarehouse(warehouse instance);
  partial void Deletewarehouse(warehouse instance);
  partial void Insertlog(log instance);
  partial void Updatelog(log instance);
  partial void Deletelog(log instance);
  partial void Insertstuff(stuff instance);
  partial void Updatestuff(stuff instance);
  partial void Deletestuff(stuff instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DSMSConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<drug> drug
	{
		get
		{
			return this.GetTable<drug>();
		}
	}
	
	public System.Data.Linq.Table<drugstore> drugstore
	{
		get
		{
			return this.GetTable<drugstore>();
		}
	}
	
	public System.Data.Linq.Table<factory> factory
	{
		get
		{
			return this.GetTable<factory>();
		}
	}
	
	public System.Data.Linq.Table<member> member
	{
		get
		{
			return this.GetTable<member>();
		}
	}
	
	public System.Data.Linq.Table<orderDetails> orderDetails
	{
		get
		{
			return this.GetTable<orderDetails>();
		}
	}
	
	public System.Data.Linq.Table<orderform> orderform
	{
		get
		{
			return this.GetTable<orderform>();
		}
	}
	
	public System.Data.Linq.Table<warehouse> warehouse
	{
		get
		{
			return this.GetTable<warehouse>();
		}
	}
	
	public System.Data.Linq.Table<log> log
	{
		get
		{
			return this.GetTable<log>();
		}
	}
	
	public System.Data.Linq.Table<stuff> stuff
	{
		get
		{
			return this.GetTable<stuff>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.drug")]
public partial class drug : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _drugid;
	
	private string _factoryid;
	
	private string _batchnumber;
	
	private string _drugname;
	
	private string _drugtype;
	
	private string _drugstandard;
	
	private System.Nullable<System.DateTime> _producedate;
	
	private System.Nullable<int> _qualitytime;
	
	private float _primecost;
	
	private float _price;
	
	private string _more;
	
	private EntitySet<orderDetails> _orderDetails;
	
	private EntityRef<factory> _factory;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndrugidChanging(string value);
    partial void OndrugidChanged();
    partial void OnfactoryidChanging(string value);
    partial void OnfactoryidChanged();
    partial void OnbatchnumberChanging(string value);
    partial void OnbatchnumberChanged();
    partial void OndrugnameChanging(string value);
    partial void OndrugnameChanged();
    partial void OndrugtypeChanging(string value);
    partial void OndrugtypeChanged();
    partial void OndrugstandardChanging(string value);
    partial void OndrugstandardChanged();
    partial void OnproducedateChanging(System.Nullable<System.DateTime> value);
    partial void OnproducedateChanged();
    partial void OnqualitytimeChanging(System.Nullable<int> value);
    partial void OnqualitytimeChanged();
    partial void OnprimecostChanging(float value);
    partial void OnprimecostChanged();
    partial void OnpriceChanging(float value);
    partial void OnpriceChanged();
    partial void OnmoreChanging(string value);
    partial void OnmoreChanged();
    #endregion
	
	public drug()
	{
		this._orderDetails = new EntitySet<orderDetails>(new Action<orderDetails>(this.attach_orderDetails), new Action<orderDetails>(this.detach_orderDetails));
		this._factory = default(EntityRef<factory>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugid", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string drugid
	{
		get
		{
			return this._drugid;
		}
		set
		{
			if ((this._drugid != value))
			{
				this.OndrugidChanging(value);
				this.SendPropertyChanging();
				this._drugid = value;
				this.SendPropertyChanged("drugid");
				this.OndrugidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factoryid", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string factoryid
	{
		get
		{
			return this._factoryid;
		}
		set
		{
			if ((this._factoryid != value))
			{
				if (this._factory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnfactoryidChanging(value);
				this.SendPropertyChanging();
				this._factoryid = value;
				this.SendPropertyChanged("factoryid");
				this.OnfactoryidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_batchnumber", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string batchnumber
	{
		get
		{
			return this._batchnumber;
		}
		set
		{
			if ((this._batchnumber != value))
			{
				this.OnbatchnumberChanging(value);
				this.SendPropertyChanging();
				this._batchnumber = value;
				this.SendPropertyChanged("batchnumber");
				this.OnbatchnumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugname", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string drugname
	{
		get
		{
			return this._drugname;
		}
		set
		{
			if ((this._drugname != value))
			{
				this.OndrugnameChanging(value);
				this.SendPropertyChanging();
				this._drugname = value;
				this.SendPropertyChanged("drugname");
				this.OndrugnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugtype", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string drugtype
	{
		get
		{
			return this._drugtype;
		}
		set
		{
			if ((this._drugtype != value))
			{
				this.OndrugtypeChanging(value);
				this.SendPropertyChanging();
				this._drugtype = value;
				this.SendPropertyChanged("drugtype");
				this.OndrugtypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugstandard", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string drugstandard
	{
		get
		{
			return this._drugstandard;
		}
		set
		{
			if ((this._drugstandard != value))
			{
				this.OndrugstandardChanging(value);
				this.SendPropertyChanging();
				this._drugstandard = value;
				this.SendPropertyChanged("drugstandard");
				this.OndrugstandardChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_producedate", DbType="Date")]
	public System.Nullable<System.DateTime> producedate
	{
		get
		{
			return this._producedate;
		}
		set
		{
			if ((this._producedate != value))
			{
				this.OnproducedateChanging(value);
				this.SendPropertyChanging();
				this._producedate = value;
				this.SendPropertyChanged("producedate");
				this.OnproducedateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qualitytime", DbType="Int")]
	public System.Nullable<int> qualitytime
	{
		get
		{
			return this._qualitytime;
		}
		set
		{
			if ((this._qualitytime != value))
			{
				this.OnqualitytimeChanging(value);
				this.SendPropertyChanging();
				this._qualitytime = value;
				this.SendPropertyChanged("qualitytime");
				this.OnqualitytimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primecost", DbType="Real NOT NULL")]
	public float primecost
	{
		get
		{
			return this._primecost;
		}
		set
		{
			if ((this._primecost != value))
			{
				this.OnprimecostChanging(value);
				this.SendPropertyChanging();
				this._primecost = value;
				this.SendPropertyChanged("primecost");
				this.OnprimecostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Real NOT NULL")]
	public float price
	{
		get
		{
			return this._price;
		}
		set
		{
			if ((this._price != value))
			{
				this.OnpriceChanging(value);
				this.SendPropertyChanging();
				this._price = value;
				this.SendPropertyChanged("price");
				this.OnpriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_more", DbType="VarChar(99)")]
	public string more
	{
		get
		{
			return this._more;
		}
		set
		{
			if ((this._more != value))
			{
				this.OnmoreChanging(value);
				this.SendPropertyChanging();
				this._more = value;
				this.SendPropertyChanged("more");
				this.OnmoreChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="drug_orderDetails", Storage="_orderDetails", ThisKey="drugid", OtherKey="drugid")]
	public EntitySet<orderDetails> orderDetails
	{
		get
		{
			return this._orderDetails;
		}
		set
		{
			this._orderDetails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="factory_drug", Storage="_factory", ThisKey="factoryid", OtherKey="factoryid", IsForeignKey=true)]
	public factory factory
	{
		get
		{
			return this._factory.Entity;
		}
		set
		{
			factory previousValue = this._factory.Entity;
			if (((previousValue != value) 
						|| (this._factory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._factory.Entity = null;
					previousValue.drug.Remove(this);
				}
				this._factory.Entity = value;
				if ((value != null))
				{
					value.drug.Add(this);
					this._factoryid = value.factoryid;
				}
				else
				{
					this._factoryid = default(string);
				}
				this.SendPropertyChanged("factory");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_orderDetails(orderDetails entity)
	{
		this.SendPropertyChanging();
		entity.drug = this;
	}
	
	private void detach_orderDetails(orderDetails entity)
	{
		this.SendPropertyChanging();
		entity.drug = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.drugstore")]
public partial class drugstore : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _drugstoreid;
	
	private string _drugstorename;
	
	private string _drugstoreaddress;
	
	private string _drugstorephonenumber;
	
	private EntitySet<orderform> _orderform;
	
	private EntitySet<stuff> _stuff;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndrugstoreidChanging(string value);
    partial void OndrugstoreidChanged();
    partial void OndrugstorenameChanging(string value);
    partial void OndrugstorenameChanged();
    partial void OndrugstoreaddressChanging(string value);
    partial void OndrugstoreaddressChanged();
    partial void OndrugstorephonenumberChanging(string value);
    partial void OndrugstorephonenumberChanged();
    #endregion
	
	public drugstore()
	{
		this._orderform = new EntitySet<orderform>(new Action<orderform>(this.attach_orderform), new Action<orderform>(this.detach_orderform));
		this._stuff = new EntitySet<stuff>(new Action<stuff>(this.attach_stuff), new Action<stuff>(this.detach_stuff));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugstoreid", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string drugstoreid
	{
		get
		{
			return this._drugstoreid;
		}
		set
		{
			if ((this._drugstoreid != value))
			{
				this.OndrugstoreidChanging(value);
				this.SendPropertyChanging();
				this._drugstoreid = value;
				this.SendPropertyChanged("drugstoreid");
				this.OndrugstoreidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugstorename", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string drugstorename
	{
		get
		{
			return this._drugstorename;
		}
		set
		{
			if ((this._drugstorename != value))
			{
				this.OndrugstorenameChanging(value);
				this.SendPropertyChanging();
				this._drugstorename = value;
				this.SendPropertyChanged("drugstorename");
				this.OndrugstorenameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugstoreaddress", DbType="VarChar(63) NOT NULL", CanBeNull=false)]
	public string drugstoreaddress
	{
		get
		{
			return this._drugstoreaddress;
		}
		set
		{
			if ((this._drugstoreaddress != value))
			{
				this.OndrugstoreaddressChanging(value);
				this.SendPropertyChanging();
				this._drugstoreaddress = value;
				this.SendPropertyChanged("drugstoreaddress");
				this.OndrugstoreaddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugstorephonenumber", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string drugstorephonenumber
	{
		get
		{
			return this._drugstorephonenumber;
		}
		set
		{
			if ((this._drugstorephonenumber != value))
			{
				this.OndrugstorephonenumberChanging(value);
				this.SendPropertyChanging();
				this._drugstorephonenumber = value;
				this.SendPropertyChanged("drugstorephonenumber");
				this.OndrugstorephonenumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="drugstore_orderform", Storage="_orderform", ThisKey="drugstoreid", OtherKey="drugstoreid")]
	public EntitySet<orderform> orderform
	{
		get
		{
			return this._orderform;
		}
		set
		{
			this._orderform.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="drugstore_stuff", Storage="_stuff", ThisKey="drugstoreid", OtherKey="drugstoreid")]
	public EntitySet<stuff> stuff
	{
		get
		{
			return this._stuff;
		}
		set
		{
			this._stuff.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_orderform(orderform entity)
	{
		this.SendPropertyChanging();
		entity.drugstore = this;
	}
	
	private void detach_orderform(orderform entity)
	{
		this.SendPropertyChanging();
		entity.drugstore = null;
	}
	
	private void attach_stuff(stuff entity)
	{
		this.SendPropertyChanging();
		entity.drugstore = this;
	}
	
	private void detach_stuff(stuff entity)
	{
		this.SendPropertyChanging();
		entity.drugstore = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.factory")]
public partial class factory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _factoryid;
	
	private string _factoryname;
	
	private string _factoryaddress;
	
	private string _factoryphonenumber;
	
	private EntitySet<drug> _drug;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfactoryidChanging(string value);
    partial void OnfactoryidChanged();
    partial void OnfactorynameChanging(string value);
    partial void OnfactorynameChanged();
    partial void OnfactoryaddressChanging(string value);
    partial void OnfactoryaddressChanged();
    partial void OnfactoryphonenumberChanging(string value);
    partial void OnfactoryphonenumberChanged();
    #endregion
	
	public factory()
	{
		this._drug = new EntitySet<drug>(new Action<drug>(this.attach_drug), new Action<drug>(this.detach_drug));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factoryid", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string factoryid
	{
		get
		{
			return this._factoryid;
		}
		set
		{
			if ((this._factoryid != value))
			{
				this.OnfactoryidChanging(value);
				this.SendPropertyChanging();
				this._factoryid = value;
				this.SendPropertyChanged("factoryid");
				this.OnfactoryidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factoryname", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string factoryname
	{
		get
		{
			return this._factoryname;
		}
		set
		{
			if ((this._factoryname != value))
			{
				this.OnfactorynameChanging(value);
				this.SendPropertyChanging();
				this._factoryname = value;
				this.SendPropertyChanged("factoryname");
				this.OnfactorynameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factoryaddress", DbType="VarChar(63)")]
	public string factoryaddress
	{
		get
		{
			return this._factoryaddress;
		}
		set
		{
			if ((this._factoryaddress != value))
			{
				this.OnfactoryaddressChanging(value);
				this.SendPropertyChanging();
				this._factoryaddress = value;
				this.SendPropertyChanged("factoryaddress");
				this.OnfactoryaddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_factoryphonenumber", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string factoryphonenumber
	{
		get
		{
			return this._factoryphonenumber;
		}
		set
		{
			if ((this._factoryphonenumber != value))
			{
				this.OnfactoryphonenumberChanging(value);
				this.SendPropertyChanging();
				this._factoryphonenumber = value;
				this.SendPropertyChanged("factoryphonenumber");
				this.OnfactoryphonenumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="factory_drug", Storage="_drug", ThisKey="factoryid", OtherKey="factoryid")]
	public EntitySet<drug> drug
	{
		get
		{
			return this._drug;
		}
		set
		{
			this._drug.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_drug(drug entity)
	{
		this.SendPropertyChanging();
		entity.factory = this;
	}
	
	private void detach_drug(drug entity)
	{
		this.SendPropertyChanging();
		entity.factory = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.member")]
public partial class member : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _memberid;
	
	private string _membername;
	
	private string _phonenumber;
	
	private float _credits;
	
	private EntitySet<orderform> _orderform;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmemberidChanging(string value);
    partial void OnmemberidChanged();
    partial void OnmembernameChanging(string value);
    partial void OnmembernameChanged();
    partial void OnphonenumberChanging(string value);
    partial void OnphonenumberChanged();
    partial void OncreditsChanging(float value);
    partial void OncreditsChanged();
    #endregion
	
	public member()
	{
		this._orderform = new EntitySet<orderform>(new Action<orderform>(this.attach_orderform), new Action<orderform>(this.detach_orderform));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberid", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string memberid
	{
		get
		{
			return this._memberid;
		}
		set
		{
			if ((this._memberid != value))
			{
				this.OnmemberidChanging(value);
				this.SendPropertyChanging();
				this._memberid = value;
				this.SendPropertyChanged("memberid");
				this.OnmemberidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_membername", DbType="VarChar(10)")]
	public string membername
	{
		get
		{
			return this._membername;
		}
		set
		{
			if ((this._membername != value))
			{
				this.OnmembernameChanging(value);
				this.SendPropertyChanging();
				this._membername = value;
				this.SendPropertyChanged("membername");
				this.OnmembernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phonenumber", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string phonenumber
	{
		get
		{
			return this._phonenumber;
		}
		set
		{
			if ((this._phonenumber != value))
			{
				this.OnphonenumberChanging(value);
				this.SendPropertyChanging();
				this._phonenumber = value;
				this.SendPropertyChanged("phonenumber");
				this.OnphonenumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credits", DbType="Real NOT NULL")]
	public float credits
	{
		get
		{
			return this._credits;
		}
		set
		{
			if ((this._credits != value))
			{
				this.OncreditsChanging(value);
				this.SendPropertyChanging();
				this._credits = value;
				this.SendPropertyChanged("credits");
				this.OncreditsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="member_orderform", Storage="_orderform", ThisKey="memberid", OtherKey="memberid")]
	public EntitySet<orderform> orderform
	{
		get
		{
			return this._orderform;
		}
		set
		{
			this._orderform.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_orderform(orderform entity)
	{
		this.SendPropertyChanging();
		entity.member = this;
	}
	
	private void detach_orderform(orderform entity)
	{
		this.SendPropertyChanging();
		entity.member = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orderDetails")]
public partial class orderDetails : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _datailid;
	
	private string _orderformid;
	
	private string _drugid;
	
	private System.Nullable<float> _discount;
	
	private int _drugnumber;
	
	private EntityRef<drug> _drug;
	
	private EntityRef<orderform> _orderform;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndatailidChanging(string value);
    partial void OndatailidChanged();
    partial void OnorderformidChanging(string value);
    partial void OnorderformidChanged();
    partial void OndrugidChanging(string value);
    partial void OndrugidChanged();
    partial void OndiscountChanging(System.Nullable<float> value);
    partial void OndiscountChanged();
    partial void OndrugnumberChanging(int value);
    partial void OndrugnumberChanged();
    #endregion
	
	public orderDetails()
	{
		this._drug = default(EntityRef<drug>);
		this._orderform = default(EntityRef<orderform>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datailid", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string datailid
	{
		get
		{
			return this._datailid;
		}
		set
		{
			if ((this._datailid != value))
			{
				this.OndatailidChanging(value);
				this.SendPropertyChanging();
				this._datailid = value;
				this.SendPropertyChanged("datailid");
				this.OndatailidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderformid", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string orderformid
	{
		get
		{
			return this._orderformid;
		}
		set
		{
			if ((this._orderformid != value))
			{
				if (this._orderform.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnorderformidChanging(value);
				this.SendPropertyChanging();
				this._orderformid = value;
				this.SendPropertyChanged("orderformid");
				this.OnorderformidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugid", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string drugid
	{
		get
		{
			return this._drugid;
		}
		set
		{
			if ((this._drugid != value))
			{
				if (this._drug.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OndrugidChanging(value);
				this.SendPropertyChanging();
				this._drugid = value;
				this.SendPropertyChanged("drugid");
				this.OndrugidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="Real")]
	public System.Nullable<float> discount
	{
		get
		{
			return this._discount;
		}
		set
		{
			if ((this._discount != value))
			{
				this.OndiscountChanging(value);
				this.SendPropertyChanging();
				this._discount = value;
				this.SendPropertyChanged("discount");
				this.OndiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugnumber", DbType="Int NOT NULL")]
	public int drugnumber
	{
		get
		{
			return this._drugnumber;
		}
		set
		{
			if ((this._drugnumber != value))
			{
				this.OndrugnumberChanging(value);
				this.SendPropertyChanging();
				this._drugnumber = value;
				this.SendPropertyChanged("drugnumber");
				this.OndrugnumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="drug_orderDetails", Storage="_drug", ThisKey="drugid", OtherKey="drugid", IsForeignKey=true)]
	public drug drug
	{
		get
		{
			return this._drug.Entity;
		}
		set
		{
			drug previousValue = this._drug.Entity;
			if (((previousValue != value) 
						|| (this._drug.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._drug.Entity = null;
					previousValue.orderDetails.Remove(this);
				}
				this._drug.Entity = value;
				if ((value != null))
				{
					value.orderDetails.Add(this);
					this._drugid = value.drugid;
				}
				else
				{
					this._drugid = default(string);
				}
				this.SendPropertyChanged("drug");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="orderform_orderDetails", Storage="_orderform", ThisKey="orderformid", OtherKey="orderformid", IsForeignKey=true)]
	public orderform orderform
	{
		get
		{
			return this._orderform.Entity;
		}
		set
		{
			orderform previousValue = this._orderform.Entity;
			if (((previousValue != value) 
						|| (this._orderform.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._orderform.Entity = null;
					previousValue.orderDetails.Remove(this);
				}
				this._orderform.Entity = value;
				if ((value != null))
				{
					value.orderDetails.Add(this);
					this._orderformid = value.orderformid;
				}
				else
				{
					this._orderformid = default(string);
				}
				this.SendPropertyChanged("orderform");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.orderform")]
public partial class orderform : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _orderformid;
	
	private string _stuffid;
	
	private string _drugstoreid;
	
	private string _memberid;
	
	private System.Nullable<System.DateTime> _saletime;
	
	private float _totalmoney;
	
	private EntitySet<orderDetails> _orderDetails;
	
	private EntityRef<drugstore> _drugstore;
	
	private EntityRef<member> _member;
	
	private EntityRef<stuff> _stuff;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnorderformidChanging(string value);
    partial void OnorderformidChanged();
    partial void OnstuffidChanging(string value);
    partial void OnstuffidChanged();
    partial void OndrugstoreidChanging(string value);
    partial void OndrugstoreidChanged();
    partial void OnmemberidChanging(string value);
    partial void OnmemberidChanged();
    partial void OnsaletimeChanging(System.Nullable<System.DateTime> value);
    partial void OnsaletimeChanged();
    partial void OntotalmoneyChanging(float value);
    partial void OntotalmoneyChanged();
    #endregion
	
	public orderform()
	{
		this._orderDetails = new EntitySet<orderDetails>(new Action<orderDetails>(this.attach_orderDetails), new Action<orderDetails>(this.detach_orderDetails));
		this._drugstore = default(EntityRef<drugstore>);
		this._member = default(EntityRef<member>);
		this._stuff = default(EntityRef<stuff>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderformid", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string orderformid
	{
		get
		{
			return this._orderformid;
		}
		set
		{
			if ((this._orderformid != value))
			{
				this.OnorderformidChanging(value);
				this.SendPropertyChanging();
				this._orderformid = value;
				this.SendPropertyChanged("orderformid");
				this.OnorderformidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stuffid", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string stuffid
	{
		get
		{
			return this._stuffid;
		}
		set
		{
			if ((this._stuffid != value))
			{
				if (this._stuff.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnstuffidChanging(value);
				this.SendPropertyChanging();
				this._stuffid = value;
				this.SendPropertyChanged("stuffid");
				this.OnstuffidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugstoreid", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string drugstoreid
	{
		get
		{
			return this._drugstoreid;
		}
		set
		{
			if ((this._drugstoreid != value))
			{
				if (this._drugstore.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OndrugstoreidChanging(value);
				this.SendPropertyChanging();
				this._drugstoreid = value;
				this.SendPropertyChanged("drugstoreid");
				this.OndrugstoreidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberid", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string memberid
	{
		get
		{
			return this._memberid;
		}
		set
		{
			if ((this._memberid != value))
			{
				if (this._member.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnmemberidChanging(value);
				this.SendPropertyChanging();
				this._memberid = value;
				this.SendPropertyChanged("memberid");
				this.OnmemberidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_saletime", DbType="Date")]
	public System.Nullable<System.DateTime> saletime
	{
		get
		{
			return this._saletime;
		}
		set
		{
			if ((this._saletime != value))
			{
				this.OnsaletimeChanging(value);
				this.SendPropertyChanging();
				this._saletime = value;
				this.SendPropertyChanged("saletime");
				this.OnsaletimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalmoney", DbType="Real NOT NULL")]
	public float totalmoney
	{
		get
		{
			return this._totalmoney;
		}
		set
		{
			if ((this._totalmoney != value))
			{
				this.OntotalmoneyChanging(value);
				this.SendPropertyChanging();
				this._totalmoney = value;
				this.SendPropertyChanged("totalmoney");
				this.OntotalmoneyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="orderform_orderDetails", Storage="_orderDetails", ThisKey="orderformid", OtherKey="orderformid")]
	public EntitySet<orderDetails> orderDetails
	{
		get
		{
			return this._orderDetails;
		}
		set
		{
			this._orderDetails.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="drugstore_orderform", Storage="_drugstore", ThisKey="drugstoreid", OtherKey="drugstoreid", IsForeignKey=true)]
	public drugstore drugstore
	{
		get
		{
			return this._drugstore.Entity;
		}
		set
		{
			drugstore previousValue = this._drugstore.Entity;
			if (((previousValue != value) 
						|| (this._drugstore.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._drugstore.Entity = null;
					previousValue.orderform.Remove(this);
				}
				this._drugstore.Entity = value;
				if ((value != null))
				{
					value.orderform.Add(this);
					this._drugstoreid = value.drugstoreid;
				}
				else
				{
					this._drugstoreid = default(string);
				}
				this.SendPropertyChanged("drugstore");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="member_orderform", Storage="_member", ThisKey="memberid", OtherKey="memberid", IsForeignKey=true)]
	public member member
	{
		get
		{
			return this._member.Entity;
		}
		set
		{
			member previousValue = this._member.Entity;
			if (((previousValue != value) 
						|| (this._member.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._member.Entity = null;
					previousValue.orderform.Remove(this);
				}
				this._member.Entity = value;
				if ((value != null))
				{
					value.orderform.Add(this);
					this._memberid = value.memberid;
				}
				else
				{
					this._memberid = default(string);
				}
				this.SendPropertyChanged("member");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stuff_orderform", Storage="_stuff", ThisKey="stuffid", OtherKey="stuffid", IsForeignKey=true)]
	public stuff stuff
	{
		get
		{
			return this._stuff.Entity;
		}
		set
		{
			stuff previousValue = this._stuff.Entity;
			if (((previousValue != value) 
						|| (this._stuff.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._stuff.Entity = null;
					previousValue.orderform.Remove(this);
				}
				this._stuff.Entity = value;
				if ((value != null))
				{
					value.orderform.Add(this);
					this._stuffid = value.stuffid;
				}
				else
				{
					this._stuffid = default(string);
				}
				this.SendPropertyChanged("stuff");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_orderDetails(orderDetails entity)
	{
		this.SendPropertyChanging();
		entity.orderform = this;
	}
	
	private void detach_orderDetails(orderDetails entity)
	{
		this.SendPropertyChanging();
		entity.orderform = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.warehouse")]
public partial class warehouse : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _drugstoreid;
	
	private string _drugid;
	
	private int _drugamount;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndrugstoreidChanging(string value);
    partial void OndrugstoreidChanged();
    partial void OndrugidChanging(string value);
    partial void OndrugidChanged();
    partial void OndrugamountChanging(int value);
    partial void OndrugamountChanged();
    #endregion
	
	public warehouse()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugstoreid", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string drugstoreid
	{
		get
		{
			return this._drugstoreid;
		}
		set
		{
			if ((this._drugstoreid != value))
			{
				this.OndrugstoreidChanging(value);
				this.SendPropertyChanging();
				this._drugstoreid = value;
				this.SendPropertyChanged("drugstoreid");
				this.OndrugstoreidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugid", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string drugid
	{
		get
		{
			return this._drugid;
		}
		set
		{
			if ((this._drugid != value))
			{
				this.OndrugidChanging(value);
				this.SendPropertyChanging();
				this._drugid = value;
				this.SendPropertyChanged("drugid");
				this.OndrugidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugamount", DbType="Int NOT NULL")]
	public int drugamount
	{
		get
		{
			return this._drugamount;
		}
		set
		{
			if ((this._drugamount != value))
			{
				this.OndrugamountChanging(value);
				this.SendPropertyChanging();
				this._drugamount = value;
				this.SendPropertyChanged("drugamount");
				this.OndrugamountChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[log]")]
public partial class log : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _stuffid;
	
	private string _logindate;
	
	private string _ipaddress;
	
	private string _hostname;
	
	private string _loginstatus;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstuffidChanging(string value);
    partial void OnstuffidChanged();
    partial void OnlogindateChanging(string value);
    partial void OnlogindateChanged();
    partial void OnipaddressChanging(string value);
    partial void OnipaddressChanged();
    partial void OnhostnameChanging(string value);
    partial void OnhostnameChanged();
    partial void OnloginstatusChanging(string value);
    partial void OnloginstatusChanged();
    #endregion
	
	public log()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stuffid", DbType="NChar(32) NOT NULL", CanBeNull=false)]
	public string stuffid
	{
		get
		{
			return this._stuffid;
		}
		set
		{
			if ((this._stuffid != value))
			{
				this.OnstuffidChanging(value);
				this.SendPropertyChanging();
				this._stuffid = value;
				this.SendPropertyChanged("stuffid");
				this.OnstuffidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logindate", DbType="NChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string logindate
	{
		get
		{
			return this._logindate;
		}
		set
		{
			if ((this._logindate != value))
			{
				this.OnlogindateChanging(value);
				this.SendPropertyChanging();
				this._logindate = value;
				this.SendPropertyChanged("logindate");
				this.OnlogindateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipaddress", DbType="NChar(32) NOT NULL", CanBeNull=false)]
	public string ipaddress
	{
		get
		{
			return this._ipaddress;
		}
		set
		{
			if ((this._ipaddress != value))
			{
				this.OnipaddressChanging(value);
				this.SendPropertyChanging();
				this._ipaddress = value;
				this.SendPropertyChanged("ipaddress");
				this.OnipaddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hostname", DbType="NChar(32) NOT NULL", CanBeNull=false)]
	public string hostname
	{
		get
		{
			return this._hostname;
		}
		set
		{
			if ((this._hostname != value))
			{
				this.OnhostnameChanging(value);
				this.SendPropertyChanging();
				this._hostname = value;
				this.SendPropertyChanged("hostname");
				this.OnhostnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loginstatus", DbType="NChar(32) NOT NULL", CanBeNull=false)]
	public string loginstatus
	{
		get
		{
			return this._loginstatus;
		}
		set
		{
			if ((this._loginstatus != value))
			{
				this.OnloginstatusChanging(value);
				this.SendPropertyChanging();
				this._loginstatus = value;
				this.SendPropertyChanged("loginstatus");
				this.OnloginstatusChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stuff")]
public partial class stuff : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _stuffid;
	
	private string _drugstoreid;
	
	private string _stuffname;
	
	private string _stuffsex;
	
	private string _stuffphonenumber;
	
	private string _password;
	
	private string _stufftype;
	
	private EntitySet<orderform> _orderform;
	
	private EntityRef<drugstore> _drugstore;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstuffidChanging(string value);
    partial void OnstuffidChanged();
    partial void OndrugstoreidChanging(string value);
    partial void OndrugstoreidChanged();
    partial void OnstuffnameChanging(string value);
    partial void OnstuffnameChanged();
    partial void OnstuffsexChanging(string value);
    partial void OnstuffsexChanged();
    partial void OnstuffphonenumberChanging(string value);
    partial void OnstuffphonenumberChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnstufftypeChanging(string value);
    partial void OnstufftypeChanged();
    #endregion
	
	public stuff()
	{
		this._orderform = new EntitySet<orderform>(new Action<orderform>(this.attach_orderform), new Action<orderform>(this.detach_orderform));
		this._drugstore = default(EntityRef<drugstore>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stuffid", DbType="VarChar(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string stuffid
	{
		get
		{
			return this._stuffid;
		}
		set
		{
			if ((this._stuffid != value))
			{
				this.OnstuffidChanging(value);
				this.SendPropertyChanging();
				this._stuffid = value;
				this.SendPropertyChanged("stuffid");
				this.OnstuffidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drugstoreid", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string drugstoreid
	{
		get
		{
			return this._drugstoreid;
		}
		set
		{
			if ((this._drugstoreid != value))
			{
				if (this._drugstore.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OndrugstoreidChanging(value);
				this.SendPropertyChanging();
				this._drugstoreid = value;
				this.SendPropertyChanged("drugstoreid");
				this.OndrugstoreidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stuffname", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string stuffname
	{
		get
		{
			return this._stuffname;
		}
		set
		{
			if ((this._stuffname != value))
			{
				this.OnstuffnameChanging(value);
				this.SendPropertyChanging();
				this._stuffname = value;
				this.SendPropertyChanged("stuffname");
				this.OnstuffnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stuffsex", DbType="Char(2) NOT NULL", CanBeNull=false)]
	public string stuffsex
	{
		get
		{
			return this._stuffsex;
		}
		set
		{
			if ((this._stuffsex != value))
			{
				this.OnstuffsexChanging(value);
				this.SendPropertyChanging();
				this._stuffsex = value;
				this.SendPropertyChanged("stuffsex");
				this.OnstuffsexChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stuffphonenumber", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
	public string stuffphonenumber
	{
		get
		{
			return this._stuffphonenumber;
		}
		set
		{
			if ((this._stuffphonenumber != value))
			{
				this.OnstuffphonenumberChanging(value);
				this.SendPropertyChanging();
				this._stuffphonenumber = value;
				this.SendPropertyChanged("stuffphonenumber");
				this.OnstuffphonenumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
	public string password
	{
		get
		{
			return this._password;
		}
		set
		{
			if ((this._password != value))
			{
				this.OnpasswordChanging(value);
				this.SendPropertyChanging();
				this._password = value;
				this.SendPropertyChanged("password");
				this.OnpasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stufftype", DbType="NChar(10) NOT NULL", CanBeNull=false)]
	public string stufftype
	{
		get
		{
			return this._stufftype;
		}
		set
		{
			if ((this._stufftype != value))
			{
				this.OnstufftypeChanging(value);
				this.SendPropertyChanging();
				this._stufftype = value;
				this.SendPropertyChanged("stufftype");
				this.OnstufftypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="stuff_orderform", Storage="_orderform", ThisKey="stuffid", OtherKey="stuffid")]
	public EntitySet<orderform> orderform
	{
		get
		{
			return this._orderform;
		}
		set
		{
			this._orderform.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="drugstore_stuff", Storage="_drugstore", ThisKey="drugstoreid", OtherKey="drugstoreid", IsForeignKey=true)]
	public drugstore drugstore
	{
		get
		{
			return this._drugstore.Entity;
		}
		set
		{
			drugstore previousValue = this._drugstore.Entity;
			if (((previousValue != value) 
						|| (this._drugstore.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._drugstore.Entity = null;
					previousValue.stuff.Remove(this);
				}
				this._drugstore.Entity = value;
				if ((value != null))
				{
					value.stuff.Add(this);
					this._drugstoreid = value.drugstoreid;
				}
				else
				{
					this._drugstoreid = default(string);
				}
				this.SendPropertyChanged("drugstore");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_orderform(orderform entity)
	{
		this.SendPropertyChanging();
		entity.stuff = this;
	}
	
	private void detach_orderform(orderform entity)
	{
		this.SendPropertyChanging();
		entity.stuff = null;
	}
}
#pragma warning restore 1591
